---

version: '3.9'

# name: jenkins

services:
  jenkins:
    image: jenkins/jenkins:2.426.2  # 2.277.4
    restart: unless-stopped
    # stop_grace_period: 30s
    # command: ["executable", "arg"]
    profiles:
      - "all"
      - "full"
      - "jenkins"
      - "master"
      - "controller"
    ports:
      - "8080:8080"
      - "50000:50000"
    networks:
      jenkins:
        aliases:
          - "jenkins"
          - "master"
          - "controller"
    # healthcheck:
    #   test: ["CMD", "dnscrypt-proxy", "-config", "/etc/dnscrypt-proxy/dnscrypt-proxy.toml", "-resolve", "captive.apple.com"]
    #   interval: 3s
    #   timeout: 5s
    #   retries: 5
    #   start_period: 30s
    # user: "${UID}:${GID}"
    # security_opt:
    #   - no-new-privileges:true
    #   - label:disable
    # cap_drop:
    #   - ALL
    # cap_add:
    #   - NET_BIND_SERVICE
    ulimits:
      nproc:
        soft: -1
        hard: -1
      nofile:
        soft: 524288
        hard: 1048576
      core:
        soft: -1
        hard: -1
    # deploy:
    # #   mode: global
    # #   restart_policy:
    # #     condition: on-failure
    #   resources:
    #     limits:
    #       cpus: '0.70'
    #       memory: 1G
    #     reservations:
    #       cpus: '0.5'
    #       memory: 512M
    env_file:
      - ./.env
    environment:
      TZ: "${TZ:-Asia/Shanghai}"
      DEFAULT_TZ: "${DEFAULT_TZ:-Asia/Shanghai}"
      # HTTP_PROXY: "${HTTP_PROXY}"
      # HTTPS_PROXY: "${HTTPS_PROXY}"
      DOCKER_HOST: "tcp://docker:2376"
      DOCKER_CERT_PATH: "/certs/client"
      DOCKER_TLS_VERIFY: "1"
      # CASC_JENKINS_CONFIG: "${CASC_JENKINS_CONFIG:-/usr/share/jenkins/jenkins.yaml,/usr/share/jenkins/casc_configs}"
      JENKINS_OPTS: "--prefix=/jenkins"
      JAVA_OPTS: "-Dhudson.plugins.git.GitSCM.ALLOW_LOCAL_CHECKOUT=true"
      # JENKINS_JAVA_OPTS: ""
    volumes:
      - type: bind
        source: "/usr/share/zoneinfo/Asia/Shanghai"
        target: "/usr/share/zoneinfo/Asia/Shanghai"
        read_only: true
      - type: bind
        source: "./docker_certs.d"
        target: "/certs"
        read_only: true
      - type: bind
        source: "./jenkins/data"
        target: "/var/jenkins_home"
      - type: bind
        source: "./jenkins/ref/plugins.txt"
        target: "/usr/share/jenkins/ref/plugins.txt"
      - type: bind
        source: "./jenkins/ref/plugins"
        target: "/usr/share/jenkins/ref/plugins"
      - type: bind
        source: "./jenkins/ref/init.groovy.d"
        target: "/usr/share/jenkins/ref/init.groovy.d"
      # - type: bind
      #   source: "./jenkins/ref/jenkins.install.UpgradeWizard.state"
      #   target: "/usr/share/jenkins/ref/jenkins.install.UpgradeWizard.state"
      # - type: bind
      #   source: "./jenkins/jenkins.yaml"
      #   target: "/usr/share/jenkins/jenkins.yaml"
      # - type: bind
      #   source: "./jenkins/casc_configs"
      #   target: "/usr/share/jenkins/casc_configs"
    # labels:
    #   - "traefik.enable=true"
    #   - "traefik.docker.network=traefik"

# https://hub.docker.com/_/docker
  docker:
    image: docker:24.0.7-dind
    restart: unless-stopped
    profiles:
      - "all"
      - "full"
      # - "jenkins"
      # - "master"
      # - "controller"
      - "agent"
    # ports:
    #   - "2376:2376"
    networks:
      jenkins:
        aliases:
          - "docker"
    privileged: true
    storage_opt:
      driver: overlay2
    ulimits:
      nproc:
        soft: -1
        hard: -1
      nofile:
        soft: 524288
        hard: 1048576
      core:
        soft: -1
        hard: -1
    deploy:
    #   mode: global
    #   restart_policy:
    #     condition: on-failure
      resources:
        limits:
          # cpus: '0.70'
          # memory: 1G
          pids: -1
        # reservations:
        #   cpus: '0.5'
        #   memory: 512M
    # oom_kill_disable: false
    oom_score_adj: -500
    env_file:
      - ./.env
    environment:
      TZ: "${TZ:-Asia/Shanghai}"
      DEFAULT_TZ: "${DEFAULT_TZ:-Asia/Shanghai}"
      # HTTP_PROXY: "${HTTP_PROXY}"
      # HTTPS_PROXY: "${HTTPS_PROXY}"
      DOCKER_TLS_CERTDIR: "/certs"
    volumes:
      - type: bind
        source: "/usr/share/zoneinfo/Asia/Shanghai"
        target: "/usr/share/zoneinfo/Asia/Shanghai"
        read_only: true
      - type: bind
        source: "./docker_certs.d"
        target: "/certs"
      # - type: bind
      #   source: "./jenkins/data"
      #   target: "/var/jenkins_home"
      - type: bind
        source: "./jenkins/data"
        target: "/home/jenkins"

# https://www.jenkins.io/doc/book/using/using-agents/
# https://hub.docker.com/r/jenkins/inbound-agent
# https://github.com/jenkinsci/docker-inbound-agent
  agent:
    image: jenkins/inbound-agent
    restart: unless-stopped
    profiles:
      - "all"
      - "full"
      - "agent"
    init: true
    networks:
      jenkins:
        aliases:
          - "agent"
    env_file:
      - ./.env
    environment:
      TZ: "${TZ:-Asia/Shanghai}"
      DEFAULT_TZ: "${DEFAULT_TZ:-Asia/Shanghai}"
      # HTTP_PROXY: "${HTTP_PROXY}"
      # HTTPS_PROXY: "${HTTPS_PROXY}"
      # DOCKER_HOST: "tcp://docker:2376"
      # DOCKER_CERT_PATH: "/certs/client"
      # DOCKER_TLS_VERIFY: "1"
      JENKINS_URL: "${JENKINS_URL:-http://jenkins:8080/jenkins}"
      # JENKINS_TUNNEL: ""
      JENKINS_AGENT_NAME: "${JENKINS_AGENT_NAME:-default}"
      JENKINS_AGENT_WORKDIR: "${JENKINS_AGENT_WORKDIR:-/home/jenkins/agent}"
      JENKINS_WEB_SOCKET: true
      JENKINS_SECRET: "${JENKINS_SECRET}"
      # JENKINS_AGENT_SSH_PUBKEY: ""
      # JAVA_OPTS: ""
      # JENKINS_JAVA_OPTS: ""
    volumes:
      - type: bind
        source: "/usr/share/zoneinfo/Asia/Shanghai"
        target: "/usr/share/zoneinfo/Asia/Shanghai"
        read_only: true
      - type: bind
        source: "./docker_certs.d"
        target: "/certs"
        read_only: true
      - type: bind
        source: "./jenkins/data"
        target: "/home/jenkins"


# docker network create jenkins
networks:
  # default:
  #   # driver: bridge
  #   external: true
  jenkins:
    name: "jenkins"
    # driver: "bridge"
    external: true
